"""init

Revision ID: cd31d947a7a3
Revises:
Create Date: 2025-09-08 16:02:03.064079

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "cd31d947a7a3"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "admins",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("phone", sa.String(length=18), nullable=True),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone"),
        sa.UniqueConstraint("telegram_id"),
    )
    op.create_table(
        "points",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_point_status", "points", ["status"], unique=False)
    op.create_table(
        "users",
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_employee", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("phone", sa.String(length=18), nullable=True),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone"),
        sa.UniqueConstraint("telegram_id"),
    )
    op.create_table(
        "employees",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("phone", sa.String(length=18), nullable=True),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone"),
        sa.UniqueConstraint("telegram_id"),
    )
    op.create_table(
        "visits",
        sa.Column("description", sa.String(length=500), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("point_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["point_id"],
            ["points.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_visit_created_at", "visits", ["created_at"], unique=False)
    op.create_index(
        "idx_visit_employee_point", "visits", ["employee_id", "point_id"], unique=False
    )
    op.create_table(
        "visit_items",
        sa.Column("visit_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("price", sa.Integer(), nullable=True),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["visit_id"],
            ["visits.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_visit_item_created_at", "visit_items", ["created_at"], unique=False
    )
    op.create_index(
        "idx_visit_item_visit_id", "visit_items", ["visit_id"], unique=False
    )
    op.create_table(
        "visit_item_files",
        sa.Column("visit_item_id", sa.Integer(), nullable=False),
        sa.Column("file_id", sa.String(length=100), nullable=False),
        sa.Column("file_type", sa.String(length=50), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["visit_item_id"],
            ["visit_items.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_visit_item_file_created_at",
        "visit_item_files",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        "idx_visit_item_file_visit_item",
        "visit_item_files",
        ["visit_item_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_visit_item_file_visit_item", table_name="visit_item_files")
    op.drop_index("idx_visit_item_file_created_at", table_name="visit_item_files")
    op.drop_table("visit_item_files")
    op.drop_index("idx_visit_item_visit_id", table_name="visit_items")
    op.drop_index("idx_visit_item_created_at", table_name="visit_items")
    op.drop_table("visit_items")
    op.drop_index("idx_visit_employee_point", table_name="visits")
    op.drop_index("idx_visit_created_at", table_name="visits")
    op.drop_table("visits")
    op.drop_table("employees")
    op.drop_table("users")
    op.drop_index("idx_point_status", table_name="points")
    op.drop_table("points")
    op.drop_table("admins")
    # ### end Alembic commands ###
